https://github.com/Aakashdeveloper
https://nodejs.org/en/
https://code.visualstudio.com/download


Npm
React = 3
Mock API
json-server
React-JWT(Login Logout)-2
Github
Depolyment
-> MERN
-> heroku
/////////////////////////////////
-> Docker
-> Nginx
-> Aws


React-GraphQL-1
React_hooks -1
Basic React Native=1
React-Redux =1
React-Redux =1
Testing Jest Enzime

//walkthrough
React-Saga -1
React-with-typescript-1
--------NOT Backend--------------
API
GraphQL
Login/Logout

//extensions
> Auto Close
> EsLint
> Git History
> Git Lens 
> Tab Nine 

///////////////////////////////
React > react is frontend framework/lib which help to build single page
application using component base structure
//////////////////////////////

open source > anybody can contribute

npm > node package manager

JSON > JavaScript Object Notation
[
    {
        name:'John',
        city:'Delhi'
    },
    {
        name:'Nikita',
        city:'Paris',
        country:'France'
    }
]

////////////////////////////////
package.json

> starting point to the application
> script (start,build,test)
> package we require for app
> metadata description,name, version


////////////////////////////////
Step to generate package.json

**NodeJs must be installed in system
> go install the folder using cmd
> npm init
> answer all questions
> type "yes"


////////////////////////////////
Step to install package 

**NodeJs must be installed in system
> go install the folder using cmd
> npm i package name  / npm i package name@16.6.7


////////////////////////////////
Step to generate React app
////////////////////////////////
>>>>>one time<<<<<<<<<<<<<<<<<<
#window
> open cmd as admin 
> npm i -g create-react-app

>>>>>next everytime you need new app<<<<<<<<<<<<<<<<<<
> go inside the folder using cmd
> create-react-app appname 


#mac/linux
> open terminal
> sudo npm i -g create-react-app

>>>>>next everytime you need new app<<<<<<<<<<<<<<<<<<
> go inside the folder using cmd
> create-react-app appname 

#office laptop 

>>>>>next everytime you need new app<<<<<<<<<<<<<<<<<<
> go inside the folder using cmd
> npx create-react-app appname 

////////////////////////////////
Step to run react app 
////////////////////////////////
> go inside the application using cmd
> npm start 
> localhost:3000

"react": Main library
"react-dom": Help to display content on browser
"react-scripts": Help to start the app



function test(a,b){
    return a,b
}

test(1,2)
2

///////////
class 
> logical Component
> all the logics like APi, event, databinding
> can maintain state 

function
> Dumb component
> use for only display purpose
> cannot maintain state

Hooks  

State
> state act like a local variable
> any data interaction will happen through state
> It is mutable (we can update the value fo state)

Props
> Props help to transfer the data
> immutable ( we cannot update the value of props)
> it can only transfer data between 2 nested component

Params (/1) (compulsory)
QueryParams (?name=keev) (optional)

Default Props (under routing)
match > for params
history > for redirection
location > for query params

>>> whenever state update happen component will re-render(call render function again)


JavaScript
>>> map 
>>> filter 
>>> indexof

>>> ternory operator


var a = [2,4,5,6,7,8]
a.map((data) => {return data*2})
[4, 8, 10, 12, 14, 16]

a.map((data) => {return `<p>${data*2}</p>`})

string literal
var a = 10
var b = "my age is "+a   
"my age is 10"

var c = `my age is ${a}`
"my age is 10"

///////////
parent > child  ( props )
child > parent  ( props with function (callback))

parent 
function add(a,b){
    return a+b
}

child
add(1,2)

var a = [3,5,6,2,4,5,8,7,9,3]
a.filter((data) => {return data>4})
[5, 6, 5, 8, 7, 9]


var city = ["Delhi","Mumbai","Newyork"]

city.indexOf('Delhi')
0
city.indexOf('Mumbai')
1
city.indexOf('Amsterdam')
-1
city.indexOf('Nice')
-1

>>>>>><<<<<<<
routing
>>>>><<<<<< 
npm i react-router-dom    

(get) hotels>         https://developerfunnel.herokuapp.com/hotels
(get) hotelwrtcity >  https://developerfunnel.herokuapp.com/hotels?city=6
(get) hoteldetails >  https://developerfunnel.herokuapp.com/hotelsdetails/1
(get) onbasisoftrip > https://developerfunnel.herokuapp.com/hotellist/1

(get) roomfilter >    https://developerfunnel.herokuapp.com/hotellist/4?roomtype=1

(get) costfilter >    https://developerfunnel.herokuapp.com/hotellist/1?hcost=1000&lcost=500

(get) cityname >      https://developerfunnel.herokuapp.com/location
(get) rooms >         https://developerfunnel.herokuapp.com/rooms
(get) quickSearch>    https://developerfunnel.herokuapp.com/booking
(get) bookingdetails> https://developerfunnel.herokuapp.com/allBooking
(post)placebooking >  https://developerfunnel.herokuapp.com/placeBook

npm i react-router-dom axios
npm i -g json-server

//dummy api
json-server --watch booking.json --port 7600


function add(a,b){
    return a,b
}

add(1,2)

location
Location {ancestorOrigins: DOMStringList, href: "http://localhost:3000/viewBooking?status=TXN_SUCCE…e=2021-07-12%2007:18:18.0&bank=Bank%20of%20Baroda", origin: "http://localhost:3000", protocol: "http:", host: "localhost:3000", …}
location.search
"?status=TXN_SUCCESS&ORDERID=TEST_798901&date=2021-07-12%2007:18:18.0&bank=Bank%20of%20Baroda"
location.search.split('&')
(4) ["?status=TXN_SUCCESS", "ORDERID=TEST_798901", "date=2021-07-12%2007:18:18.0", "bank=Bank%20of%20Baroda"]0: "?status=TXN_SUCCESS"1: "ORDERID=TEST_798901"2: "date=2021-07-12%2007:18:18.0"3: "bank=Bank%20of%20Baroda"length: 4__proto__: Array(0)
location.search.split('&')[0].split('=')
(2) ["?status", "TXN_SUCCESS"]0: "?status"1: "TXN_SUCCESS"length: 2__proto__: Array(0)
location.search.split('&')[0].split('=')[0]
"?status"
location.search.split('&')[0].split('=')[1]
                                      
"TXN_SUCCESS"
location.search.split('&')[1].split('=')[1]
"TEST_798901"
location.search.split('&')[2].split('=')[1]
"2021-07-12%2007:18:18.0"
location.search.split('&')[3].split('=')[1]
"Bank%20of%20Baroda"



/////////////
/******GetAllUser*****/
(GET)> https://developerjwt.herokuapp.com/api/auth/users

/******Register*****/
(POST)> https://developerjwt.herokuapp.com/api/auth/register
(body) => {"name":"Aakash", "email":"aa@gmail.com","password":"12345678","role?":"user"}


/******Login*****/
(POST) => https://developerjwt.herokuapp.com/api/auth/login
(body)  => {"email":"aa@gmail.com","password":"12345678"}
(response)=> {auth:true,token:'dgsdg'}

/******UserInfo*****/
(GET) => https://developerjwt.herokuapp.com/api/auth/userinfo
(Header) => {'x-access-token':'token value from login'}


https://docs.github.com/en/developers/apps/building-oauth-apps/authorizing-oauth-apps